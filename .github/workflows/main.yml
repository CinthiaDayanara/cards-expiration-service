name: Deploy to AWS EC2 (Main)

on:
  push:
    branches:
      - main  # Este workflow se activarÃ¡ cuando se haga push a la rama `main`

jobs:
  deploy-main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del cÃ³digo
        uses: actions/checkout@v2

      - name: Construir y subir imagen a Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cards-expiration-service-main:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/cards-expiration-service-main:latest

      - name: Conectar a la instancia EC2 de Main y actualizar contenedor
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_MAIN_HOST }}  # Instancia de EC2 para producciÃ³n
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "ðŸš€ Actualizando contenedor de main en la instancia EC2.."
            # Instalar Docker si no estÃ¡ instalado
            if ! command -v docker &> /dev/null; then
              echo "ðŸ”§ Docker no estÃ¡ instalado. Instalando Docker..."
              sudo yum update -y
              sudo yum install docker -y
              sudo usermod -aG docker ec2-user
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "âœ… Docker ya estÃ¡ instalado."
            fi

            # Crear un usuario si no existe
            if ! id -u ${USER} &>/dev/null; then
              echo "ðŸ‘¤ Usuario no encontrado, creando usuario..."
              sudo useradd -m -s /bin/bash ${USER}
            else
              echo "âœ… El usuario ya existe."
            fi

            # Detener y eliminar contenedor de main si existe
            if sudo docker ps -a --format '{{.Names}}' | grep -q cards-expiration-service-main-container; then
              echo "ðŸ›‘ Deteniendo y eliminando contenedor de main..."
              sudo docker stop cards-expiration-service-main-container
              sudo docker rm cards-expiration-service-main-container
            fi

            # Descargar la Ãºltima versiÃ³n de la imagen de main desde Docker Hub
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cards-expiration-service-main:latest

            # Ejecutar el nuevo contenedor de main
            sudo docker run -d --name cards-expiration-service-main-container \
              --env DB_USER=${{ secrets.DB_USER }} \
              --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              --env DB_SERVER=${{ secrets.DB_HOST }} \
              --env DB_NAME=${{ secrets.DB_NAME }} \
              -p 5011:5011 \
              ${{ secrets.DOCKER_USERNAME }}/cards-expiration-service-main:latest

            echo "âœ… Despliegue de main completado con Ã©xito."
